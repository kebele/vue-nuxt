vue resuorce

* dışarıyla bağlantı kurmak için kullanılır, alternatifi ve belkide dahai iyisi axios tur, kablosuz kedi eğitim notlarında onunla iligli bilgilerde var, ag bağlantısı kısaca 

* https://www.npmjs.com/package/vue-resource adresinde tafsilatı var, npm install vue-resource ile projeye ekliyoruz

* get getirmek için post yollamak için, 
    {
  // GET /someUrl
  this.$http.get('/someUrl').then(response => {
 
    // get body data
    this.someData = response.body;
 
  }, response => {
    // error callback
  });
}

şeklinde genel bir kullanımı var, 
get(url, [config])
head(url, [config])
delete(url, [config])
jsonp(url, [config])
post(url, [body], [config])
put(url, [body], [config])
patch(url, [body], [config])
en çok get, post, delete, put kullanılıyor

* https://reqres.in/ bu bir fake api burayı kullanacağız, 

*burada life cycle lardan birini kullanıp bir get isteği yapalım, uygulama mount olduğunda .... koda bak

* main.js de vueresource u kaydetmeliyiz, sonrasında App.vue da mounted life cycle ına 
  mounted() {
    {
      // GET /someUrl
      this.$http.get("https://reqres.in/api/users").then(
        (response) => {
          // get body data
          // this.someData = response.body;
          console.log(response);
        },
        (response) => {
          // error callback
          console.log(response);
        }
      );
    }
  },

  kodunu yazdık, beklediğimiz şey console aapiden users ları getirmesi, problemsi getirdi, 
  bunları template içinde sıralatalım (ul - li ile) bununn  için life cycle ı beforeCreate ile değiştirelim ve template e bastıralım ancak öncesinde data içine bir items [] yapalım ve apiden aldıklarımızı items array ıne pushlayalım, koda bak

  * birde api ye bir beilgi yollayalım, bu da api dokümanı içnde bulunur, burada tenplate den itibaren başlayarak, iki input yaptık, bunları v-model ile data da name ve job a bağladık, bir buton yapıp bna da methods olarak sendUser(){} hazırladık, inputlara yazdığımız isim ve job data daki name vve job a gidecek, saveUser ise datadaki name ve job u alıp api ye yollayacak , kod aşağıda, eğer yollamada herhangibir hata varsa kodu alt tarafı çalışacak, 
    sendUser(){
      this.$http.post("https://reqres.in/api/users", {name : this.name, job : this.job})
        .then(response => {
          console.log(response.body)
        }, ()=> {
          console.log("hata var")
        })
    }

    eğer api adresini methodun hata vermesi için değiştirrsek hata mesajını görürürüz, 
  
  *delete için, bize id lazım, bunun için bir input yapıp kullanıcıdan id girmesini isteyeceğiz, id girilince dlete butonuna basıonda deleteUser methodu çalışacak, koda bak

  * put için; template e nema, job ve id alanı girdik, burada da kullanımı dokumanytasyonda var

      updateUser(){
      this.$http.put("https://reqres.in/api/users/" + this.id, {name : this.name, job : this.job})
        .then(resp => {
          console.log(resp)
        })
    }
*vue-resource yerine axios var genelde axios kullanılıyor, emel mantık aynı



