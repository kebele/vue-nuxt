nuxt da kullanılan bazı function lar

pages > deneme.vue 
denemeleri bunun içinde yapalım

asyncData({isDev, route, store, env, params, query, req, res, redirect, error}){}

asyncData(context){
    console.log(context)
}

sayfa yüklendiğinden asyncData ile yapabileceğimiz, bütün veri türlerini console a getiririr, context yuarıdaki bir sürü parametrenin hepsini kapsayan bir parametredir,

bu componenet oluşturulmadan önce server side dan veri almak için kullandığımız func, sayfa her yüklendiğinde yada başka sayfaya gidip gelindiğinde tekrar tekrar çalışır, parametrelerde yazan işlemler için kullanılır, bir apiden ver almak veya route dan almak vb. yalnız burada unutulmamas gerelen asyncData ile ulşabileceğimiz şeyler ilk çalıştığında instance değildir, çünkü daha instance oluşturyulmadan biz bu bilgileri alırız, öncelik sonralık var,

bir örnek yapalım, ir API işlemi yapalım, https://jsonplaceholder.typicode.com/ den posts daki verileri kullanalım, gerisini _deneme.vue da yazalım, burada _deneme.vue şeklinde yazdık bunun anlamı deneme dinamik hale gelir bu şekilde ve veri alabiliriz,  


nuxt fetch için pages >  foo.vue oluşturduk,
fetch ihtiyaç duyduğumuz asenkron datayı bize getirmek için kullanılır,
fetch navigasyon değişikliklerinde çalışır ancak query değişikliklerinde çalışmaz ama bunu watch içine fetch i koyarak çözebiliriz, 

export default {
  async fetch () {
    this.value = await this.$http.$get('')
    // burada asyncData ile kullandığımız context ide burada kullanabiliriz,
  },
  data () {
    return {
      value: null
    }
  },
  watch: {
    '$route.query': '$fetch'
  }
}

ayrıca layout içindeki default.vue ya keep alive koyarsak her seferinde yeniden oluşruma olmaz, 

nuxt ile middleware oluşturma 
named middleware ayrı klasörde haızlrdığımız middleware ler
anonim middleware ler ise kullanacağımız sayfada hazırladığımız middlewarelerdir
middleware lerin görevi arada bir işlem yapmak
middleware > authenticated.js oluşturduk, bu dosyada yapaağımızı işlem eğer gelen kullanıcı kayırlı değilse onu login sayfasına yönlendirmek,
  export default function ({ store, redirect }) {

}
// store ile kullanıcı kayıtlı mı değil mi, redirect ile de yönlendirme yapacak
// store oluşturalım, store > index.js olarak

//midleware leri kullanacağımız sayfada da tanımlayabiliriz, burada midburada.vue da kullandığımız için oraya koyalım, 

//yaptığımız işlem http://localhost:3000/login ile başlıyoruz, başlangıçta state true yani sistemde kayıtlıyız, midburada ya tıklayıp gidiyoruz http://localhost:3000/midburada da kayıt durumunu değiştire tıklayıp state i değiştiriyoruz, false yapıyoruz yani artık sistemde kayıtlı değiliz, logine tıkıyoruz buradan tekrar midburada ya tıkladığımızda gidemiyoruz çünkü artık sisteme layıtlı değiliz, 

nuxt da validasyon functionları

pages > _id.vue yapalım, parametre kontrolu yapacağız her route geçisinde yazacağımız şartlara uygun m u değil mi, _id.vue ya önce her halukarda true dönme durumunu yapalım, adres satırına herhangibir şey yazsak bizim _id.vueya götürecek, çünkü validate i her durumda true ya ayarladık, 




